from selenium import webdriver
from selenium.webdriver.common.by import By
from openai import OpenAI

import time
from config import TABS

# Ëá™ÂãïÁîüÊàêÊëòË¶Å
def auto_summary(plain_text, h2_titles, all_titles):

    with open("summary_example.txt", 'r', encoding='utf-8') as file:
        output_sample = file.read()

    client = OpenAI()

    # Ë´ã GPT Âπ´ÂøôÈÅéÊøæÊéâÁÑ°ÈóúÁöÑÊñáÂ≠ó
    week_analysis = h2_titles[1]
    temp = f"ÂÖ∂‰∏≠„ÄåÊú¨ÈÄ±‰∏ªÈ°åÂàÜÊûê„ÄçÈúÄË¶ÅÊèêÂà∞Âç≥ÊôÇ„ÄÅË£úÂÖÖ"
    temp += f"ÔºåÈô§Ê≠§‰πãÂ§ñÔºåÈÇÑË¶ÅÂåÖÂê´ {'„ÄÅ'.join(all_titles[week_analysis])}" if len(all_titles[week_analysis])!=0 else ""if len(all_titles[week_analysis])!=0 else ""

    messages = []
    messages.append({
        "role": "system",
        "content": f"""
        ÊÇ®ÊòØ‰∏ÄÂÄãÁõ¥Âà∞Áç≤ÂèñÊâÄÊúâË≥áË®äÂæåÔºåÊâçÊëòË¶ÅÈáçÈªûÁöÑÂä©ÊâãÔºåÊúÉÊåâÁÖßÊúüÊúõÁöÑËº∏Âá∫Ê†ºÂºèÁµ¶‰∫àÂõûË¶ÜÔºåË´ã‰æùÁÖß‰ª•‰∏ãÊ®ôÈ°å {h2_titles} ÈÄ≤Ë°åÊëòË¶Å„ÄÇ
        {temp}

        ÂÖ∂‰∏≠„ÄåÂè∞ÈõªÊúÄÊñ∞ÂÖ¨Âëä„ÄçËã•ÊúâÂ§öÈ†ÖÔºåË´ãÂàóÈªûË™™Êòé„ÄÇ

        ÂÖ∂‰∏≠„ÄåÂ∏ÇÂ†¥ÊúÄÊñ∞ÂãïÊÖã„ÄçÈÇÑÈ†àÂåÖÂê´ÂõõÂÄãÂ≠êÊ®ôÈ°å„ÄåË™øÈ†ªÂÇôËΩâ„Äç„ÄÅ„ÄåE-dReg„Äç„ÄÅ„ÄåÂç≥ÊôÇÂÇôËΩâ„Äç„ÄÅ„ÄåË£úÂÖÖÂÇôËΩâ„ÄçÔºåÊØèÂÄãÂ≠êÊ®ôÈ°åÈúÄÊèõË°åÔºå‰∏îÈúÄÂåÖÂê´‰ª•‰∏ãÂÖßÂÆπÔºö
        „ÄåÂπ≥ÂùáÁµêÊ∏ÖÂÉπÊ†º(required)„Äç„ÄÅ„ÄåÂπ≥ÂùáÁµêÊ∏ÖÂÉπÊ†ºËºÉ‰∏äÈÄ±‰∏äÂçáor‰∏ãÊªëÂ§öÂ∞ë(required)„Äç„ÄÅ„ÄåÊú¨ÈÄ±ÂèÉËàáÂÆπÈáè(required)„Äç„ÄÅ
        „ÄåÂèÉËàáÂÆπÈáèËºÉ‰∏äÈÄ±‰∏äÂçáor‰∏ãÊªëÂ§öÂ∞ë(required)„Äç„ÄÅ„Äå‰æÜËá™Âì™ÂπæÂÄãÂª†ÂïÜ(optional)„ÄÅÂ∞çÊáâÁöÑÂª†ÂïÜÂêçÁ®±ÔºàrequiredÔºâ„ÄçÔºåË´ãÁî®‰∏ÄÂè•Ë©±ÊèèËø∞Ôºå‰∏çÈúÄË¶ÅÂàÜÊÆµ„ÄÇ
        ÂÖ∂‰∏≠„ÄåÂè∞ÈõªÈõªÂäõ‰æõÈúÄË≥áÊñô„Äç‰∏ÄÂÆöÊúÉÊèêÂà∞„ÄåÂÜçÁîüËÉΩÊ∫êÂç†ÊØî(required)„Äç„ÄÅ„ÄåÊª≤ÈÄèÁéá(required)„Äç„ÄÇ
        
        ÂÖ∂‰∏≠„Äå‰∏ãÈÄ±È†êÂëä„ÄçÂè™ÈúÄË¶ÅÈÅéÊøæÊéâ‰∏çÁõ∏ÈóúÁöÑÊñáÂ≠óÔºåÂÖ∂È§òÁõ¥Êé•Ë§áË£ΩË≤º‰∏äÔºÅ
        
        ÊúüÊúõÁöÑËº∏Âá∫Ê†ºÂºèÂ¶Ç‰∏ãÔºàÂÆÉÊòØÈÅéÂéªÁöÑÊ≠∑Âè≤Ë≥áÊñôÔºåÈÄôÂè™ÊòØÁµ¶‰Ω†ÂèÉËÄÉËº∏Âá∫ÁöÑÊ†ºÂºèÔºå‰∏¶ÈùûÂØ¶ÈöõÁöÑÊï∏ÊìöÔºåË´ã‰∏çË¶ÅÂèÉËÄÉÂÖ∂‰∏≠ÁöÑÊï∏ÊìöÂÖßÂÆπÔºâ:
        {output_sample}„ÄÇ

        ËÄåÂØ¶ÈöõÁöÑÊï∏ÊìöÂ¶Ç‰∏ã:
        {plain_text}
        """
        })
    
    response = client.chat.completions.create(
        model="gpt-4o-mini", 
        messages=messages,
        temperature=0
    )
    final_response = response.choices[0].message.content

    return final_response
    # with open(f"output/{datetime.today().strftime('%Y-%m-%d')}.mdx", 'w', encoding='utf-8') as file:
    #     file.write(final_response)

def auto_get_text(url):
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)
    driver.get(url)

    plain_text = "üìà Â∏ÇÂ†¥ÊúÄÊñ∞ÂãïÊÖã"

    for tab_name, tab_value in TABS.items():
        # ÈªûÊìäÊåâÈàï
        try:
            button = driver.find_element(By.CSS_SELECTOR, f'[data-service-tab-button="{tab_value}"]')
            button.click()
            time.sleep(1)  # Á≠âÂæÖÂÖßÂÆπÂä†Ëºâ

            # Áç≤ÂèñÈ°ØÁ§∫ÁöÑÂÖßÂÆπ
            content_element = driver.find_element(By.CSS_SELECTOR, f'[data-service-tab-content="{tab_value}"]')
            content = content_element.text.strip()  # ÊèêÂèñÊñáÂ≠óÂÖßÂÆπ
            plain_text += content
        except Exception as e:
            print(f"ÁÑ°Ê≥ïËôïÁêÜ {tab_name}ÔºåÂèØËÉΩÂÖßÂÆπ‰∏çÂ≠òÂú®ÊàñÊú™È°ØÁ§∫: {e}")

    # ÁßªÈô§Êú¨ÈÄ±ÊëòË¶Å
    need_remove = driver.find_element(By.XPATH, '//*[@id="Êú¨ÈÄ±ÊëòË¶Å"]')
    driver.execute_script("arguments[0].remove();", need_remove)
    need_remove = driver.find_element(By.XPATH, '//*[@id="__next"]/div/div[2]/article/div[3]')
    driver.execute_script("arguments[0].remove();", need_remove)

    element = driver.find_element(By.CSS_SELECTOR, "#__next > div > div.relative.grid.justify-center > article")
    elements = element.find_elements(By.CSS_SELECTOR, 'h2, p, ul')

    # print(len(p_elements))

    for e in elements:
        plain_text += f'\n{e.text}'

    driver.quit()

    # with open("output/plain_text.txt", 'w', encoding='utf-8') as file:
    #     file.write(plain_text)

    return plain_text

def auto_get_title(url):
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)
    driver.get(url)

    h2_elements = driver.find_elements(By.TAG_NAME, 'h2')
    h2_elements = h2_elements[2:-1]
    h2_ids = [h2.get_attribute('id') for h2 in h2_elements]
    # print(h2_ids)

    head_elements = driver.find_elements(By.CSS_SELECTOR, 'h2, h3')
    head = [h.get_attribute('id') for h in head_elements]
    head_elements = head_elements[2:-2]
    head = [h.get_attribute('id') for h in head_elements]
    # print(head)

    titles = {}
    for h in head:
        if h in h2_ids:
            temp = h
            titles[temp] = []
        else:
            titles[temp].append(h)
    
    # print(f"ËíêÈõÜÂà∞ÁöÑÊ®ôÈ°å: {titles}")

    return h2_ids, titles

# url = "https://info.poxa.io/report/20241111"
# auto_summary(auto_get_text(url), *auto_get_title(url))